"This paper introduces a method for learning new tasks, without interfering previous tasks, using conceptors.[[INT-NEU,PDI-NEU], [null], [SMY], [GEN]] This method originates from linear algebra, where a the network tries to algebraically infer the main subspace where previous tasks were learned, and make the network learn the new task in a new sub-space which is \"unused\" until the present task in hand.\n\n[[INT-NEU,MET-NEU], [null], [SMY], [GEN]]The paper starts with describing the method and giving some context for the method and previous methods that deal with the same problem.[[INT-NEU,MET-NEU], [null], [SMY], [GEN]] In Section 2 the authors review conceptors.[[MET-NEU], [EMP-NEU], [SMY], [GEN]] This method is algebraic method closely related to spanning sub spaces and SVD.[[MET-NEU], [EMP-NEU], [SMY], [GEN]] The main advantage of using conceptors is their trait of boolean logics: i.e., their ability to be added and multiplied naturally.[[MET-POS], [EMP-POS], [APC], [MAJ]] In section 3 the authors elaborate on reviewed ocnceptors method and show how to adapt this algorithm to SGD with back-propagation.[[MET-NEU], [null], [SMY], [GEN]] The authors provide a version with batch SGD as well.\n\n[[MET-NEU], [null], [SMY], [GEN]]In Section 4, the authors show their method on permuted MNIST.[[MET-NEU], [null], [SMY], [GEN]] They compare the method to EWC with the same architecture.[[MET-NEU], [null], [SMY], [GEN]] They show that their method more efficiently suffers on permuted MNIST from less degradation.[[MET-NEU,DAT-NEU], [null], [SMY], [GEN]] Also, they compared the method to EWC and IMM on disjoint MNIST and again got the best performance.[[RWK-POS,DAT-POS,MET-POS], [CMP-POS,EMP-POS], [APC], [MAJ]]\n\nIn general, unlike what the authors suggest, I do not believe this method is how biological agents perform their tasks in real life.[[MET-NEG], [EMP-NEG], [CRT], [MIN]] Nevertheless, the authors show that their method indeed reduce the interference generated by a new task on the old learned tasks.\n\n[[MET-NEU], [null], [DIS], [GEN]]I think that this work might interest the community since such methods might be part of the tools that practitioners have in order to cope with learning new tasks without destroying the previous ones.[[MET-POS,FWK-POS], [IMP-POS,EMP-POS], [APC], [MIN]]  What is missing is the following: I think that without any additional effort, a network can learn a new task in parallel to other task, or some other techniques may be used which are not bound to any algebraic methods.[[MET-NEG], [SUB-NEG], [DFT], [MAJ]] Therefore, my only concern is that in this comparison the work bounded to very specific group of methods, and the question of what is the best method for continual learning remained open.   "[[RWK-NEG,MET-NEG], [CMP-NEG,EMP-NEG], [DIS], [MAJ]]
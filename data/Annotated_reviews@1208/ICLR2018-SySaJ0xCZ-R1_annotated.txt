"This paper proposes a neural architecture search method that achieves close to state-of-the-art accuracy on CIFAR10 and takes much less computational resources.[[RWK-POS,DAT-NEU,MET-NEU], [null], [APC], [MAJ]] The high-level idea is similar to the evolution method of [Real et al. 2017], but the mutation preserves net2net properties, which means the mutated network does not need to retrain from scratch.[[RWK-NEU,PDI-NEU,MET-NEU], [CMP-NEU], [SMY,DIS], [GEN]]\n\nCompared to other papers on neural architecture search, the required computational resource is impressively small: close to state-of-the-art result in one day on a single GPU.[[RWK-NEG,RES-NEG], [SUB-NEG,CMP-NEG], [CRT], [MAJ]] However, it is not clear to me what contribute to the massive improvement of speed.[[RES-NEU], [EMP-NEU], [DIS], [MIN]] Is it due to the network morphing that preserve equality?[[MET-NEU], [EMP-NEU], [QSN], [MIN]] Is it due to a good initial network structure?[[MET-NEU], [EMP-NEU], [QSN], [MIN]] Is it due to the well designed mutation operations?[[MET-NEU], [EMP-NEU], [QSN], [MIN]] Is it due to the simple hill climbing procedure (basically evolution that only preserve the elite)?[[MET-NEU], [EMP-NEU], [QSN], [MIN]] Is it due to a well crafted search space that is potentially easier?[[MET-NEU], [EMP-NEU], [QSN], [MIN]]\n\nThe experiments in this paper does not provide enough evidence to tease apart the possible causes of this dramatic reduction on computational resources.[[EXP-NEG], [SUB-NEG,EMP-NEG], [DFT], [MAJ]] And the comparisons to other papers seems not fair since they all operate on different search space.[[RWK-NEG], [CMP-NEG], [CRT], [MIN]] \n\nIn summary, getting net2net to work for architecture search is interesting.[[MET-POS], [EMP-POS], [SMY,APC], [MAJ]] And I love the results. [[RES-POS], [EMP-POS], [APC], [MAJ]]These are very impressive numbers for neural architecture search.[[RES-POS], [EMP-POS], [APC], [MAJ]] However, I am not convinced that the improve is resulted from a better algorithm.[[MET-NEG], [EMP-NEG], [CRT], [MIN]] I would suggest that the paper carefully evaluates each component of the algorithm and understand why the proposed method takes far less computational resources."[[MET-NEU], [EMP-NEU], [SUG], [MIN]]
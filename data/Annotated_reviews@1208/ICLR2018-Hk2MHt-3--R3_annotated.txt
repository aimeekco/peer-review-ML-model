"This paper presents a deep network architecture which processes data using multiple parallel branches and combines the posterior from these branches to compute the final scores; the network is trained in end-to-end, thus training the parallel branches jointly.[[INT-NEU,DAT-NEU,EXP-NEU,MET-NEU], [null], [SMY], [GEN]] Existing literature with branching architecture either employ a 2 stage training approach, training branches independently and then training the fusion network, or the branching is restricted to local regions (set of contiguous layers).[[RWK-NEU,EXP-NEU,MET-NEU], [null], [SMY], [GEN]] In effect, this paper extends the existing literature suggesting end-to-end branching. [[INT-NEU,RWK-POS], [EMP-POS], [SUG,APC], [MAJ]]While the technical novelty, as described in the paper, is relatively limited, the thorough experimentation together with detailed comparisons between intuitive ways to combine the output of the parallel branches is certainly valuable to the research community.[[RWK-NEU,PDI-NEU,EXP-NEU], [NOV-NEU,CMP-NEU,EMP-NEU], [SMY], [GEN]]\n\n+ Paper is well written and easy to follow.[[OAL-POS], [CLA-POS,REC-POS], [APC], [MAJ]]\n+ Proposed branching architecture clearly outperforms the baseline network (same number of parameters with a single branch) and thus offer yet another interesting choice while creating the network architecture for a problem[[PDI-POS,EXP-POS,MET-POS], [EMP-POS], [APC], [MAJ]]\n+ Detailed experiments to study and analyze the effect of various parameters including the number of branches as well as various architectures to combine the output of the parallel branches.[[RWK-NEU,EXP-NEU,MET-NEU], [null], [SMY], [GEN]]\n+ [Ease of implementation] Suggested architecture can be easily implemented using existing deep learning frameworks.[[MET-NEU], [null], [SUG], [GEN]]\n\n- Although joint end-to-end training of branches certainly brings value compared to independent training, but the increased resource requirements may limits the applicability to large benchmarks such as ImageNet.[[RWK-NEU,EXP-NEU], [CMP-NEU], [SMY], [GEN]] While authors suggests a way to circumvent such limitations by training branches on separate GPUs but this would still impose limits on the number of branches as well as its ease of implementation.[[RWK-NEU,PDI-NEU,EXP-NEG,MET-NEU], [EMP-NEG], [SMY], [GEN]]\n- Adding an overview figure of the architecture in the main paper (instead of supplementary) would be helpful.[[RWK-NEU,MET-NEG,TNF-NEG], [EMP-NEG], [SUG,DFT], [MIN]]\n- Branched architecture serve as a regularization by distributing the gradients across different branches; however this also suggests that early layers on the network across branches would be independent. [[RWK-NEU,EXP-NEU,MET-NEU], [null], [SMY], [GEN]]It would helpful if authors would consider an alternate archiecture where early layers may be shared across branches, suggesting a delayed branching, with fusion at the final layer.[[RWK-NEU,EXP-NEU,MET-NEU], [null], [SUG], [GEN]]\n- One of the benefits of architectures such as DenseNet is their usefulness as a feature extractor (output of lower layers) which generalizes even to domain other that the dataset; the branched architecture could potentially diminish this benefit.[[EXP-POS,MET-POS], [EMP-POS], [APC], [MAJ]]\n\nMinor edits: Page 1. 'significantly match and improve' => 'either match or improve'\n\nAdditional notes:[[RWK-NEU], [IMP-NEU], [SMY], [GEN]]\n- It would interesting to compare this approach with a conditional training pipeline that sequentially adds branches, keeping the previous branches fixed.[[PDI-NEG,EXP-NEU,MET-NEU], [CMP-NEU], [SMY,SUG], [GEN]] This may offer as a trade-off between benefits of joint training of branches vs being able to train deep models with several branches.[[FWK-NEU], [null], [SMY], [GEN]]\n"
